[{"C:\\Users\\potato\\Desktop\\redux\\src\\index.js":"1","C:\\Users\\potato\\Desktop\\redux\\src\\reportWebVitals.js":"2","C:\\Users\\potato\\Desktop\\redux\\src\\App.js":"3","C:\\Users\\potato\\Desktop\\redux\\src\\components\\addTask.js":"4","C:\\Users\\potato\\Desktop\\redux\\src\\components\\listTask.js":"5","C:\\Users\\potato\\Desktop\\redux\\src\\components\\visibilityFilter.js":"6","C:\\Users\\potato\\Desktop\\redux\\src\\components\\store.js":"7","C:\\Users\\potato\\Desktop\\redux\\src\\components\\reducers.js":"8","C:\\Users\\potato\\Desktop\\redux\\src\\components\\actionTypes.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":853,"mtime":1608749955788,"results":"13","hashOfConfig":"11"},{"size":632,"mtime":1609270587671,"results":"14","hashOfConfig":"11"},{"size":1059,"mtime":1608751013142,"results":"15","hashOfConfig":"11"},{"size":722,"mtime":1608751131629,"results":"16","hashOfConfig":"11"},{"size":258,"mtime":1608290007291,"results":"17","hashOfConfig":"11"},{"size":1681,"mtime":1608750288420,"results":"18","hashOfConfig":"11"},{"size":351,"mtime":1608750683226,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4x593u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\potato\\Desktop\\redux\\src\\index.js",[],["41","42"],"C:\\Users\\potato\\Desktop\\redux\\src\\reportWebVitals.js",[],"C:\\Users\\potato\\Desktop\\redux\\src\\App.js",[],"C:\\Users\\potato\\Desktop\\redux\\src\\components\\addTask.js",["43"],"C:\\Users\\potato\\Desktop\\redux\\src\\components\\listTask.js",["44"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { _ } from 'underscore'\r\nimport { FILTER_ISDONE } from './components/actionTypes'\r\nimport { toggleTodo } from './components/actions'\r\n\r\n\r\nconst Todo = ({ todo, id, toggleTodo }) => (\r\n    <li className={todo.completed ? 'isDone' : ''} onClick={() => toggleTodo(id)}>{todo.content}</li>\r\n)\r\n\r\nfunction listTask({ todos, toggleTodo }) {\r\n    return (\r\n        _.keys(todos).map((id) => (\r\n            <Todo key={id} id={id} toggleTodo={toggleTodo} todo={todos[id]} />\r\n        ))\r\n    )\r\n}\r\n\r\nconst mapState = (state) => {\r\n    if (state.visibilityFilter.activeFilter === FILTER_ALL) {\r\n        return { todos: state.todos.data }\r\n    } else if (state.visibilityFilter.activeFilter === FILTER_ISDONE) {\r\n        return ({\r\n            todos: _.pick(state.todos.data, (todo) => todo.isDone)\r\n        })\r\n    } else {\r\n        return ({\r\n            todos: _.pick(state.todos.data, (todo) => !todo.isDone)\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { toggleTodo })(listTask);","C:\\Users\\potato\\Desktop\\redux\\src\\components\\visibilityFilter.js",[],"C:\\Users\\potato\\Desktop\\redux\\src\\components\\store.js",[],"C:\\Users\\potato\\Desktop\\redux\\src\\components\\reducers.js",["45"],"import { ADD_TASK, TOGGLE_TODO, FILTER_ISDONE, SET_FILTER } from './actionTypes'\r\n\r\nconst initialTodoState = {\r\n    nextId: 2,\r\n    data:\r\n    {\r\n        1: {\r\n            description: 'do taxes',\r\n            isDone: false\r\n        }\r\n    }\r\n}\r\n\r\nexport const todos = (state = initialTodoState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK: {\r\n            return (\r\n                {\r\n                    ...state,\r\n                    data: {\r\n                        ...state.data,\r\n                        [state.nextId]: {\r\n                            isDone: false,\r\n                            description: action.payload.description\r\n                        },\r\n                    },\r\n\r\n                    nextId: state.nextId + 1\r\n                }\r\n            )\r\n        }\r\n        case TOGGLE_TODO:{\r\n            console.log(action.payload)\r\n            return(\r\n                {\r\n                    ...state,\r\n                    data:{\r\n                        ...state.data,\r\n                        [action.payload.id]:{\r\n                            ...state.data[action.payload.id],\r\n                            isDone: !(state.data[action.payload.id].isDone)\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const visibilityFilter = (state = {activeFilter: SET_FILTER}, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER: {\r\n            return ({\r\n                activeFilter: action.payload.filter\r\n            })\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\potato\\Desktop\\redux\\src\\components\\actionTypes.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":null,"fatal":true,"severity":2,"message":"50","line":5,"column":10},{"ruleId":"51","severity":2,"message":"52","line":21,"column":49,"nodeType":"53","messageId":"54","endLine":21,"endColumn":59},{"ruleId":"55","severity":1,"message":"56","line":1,"column":33,"nodeType":"53","messageId":"57","endLine":1,"endColumn":46},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"Parsing error: Identifier 'newTask' has already been declared\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m { newTask } from \u001b[32m'./components/actions'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m\u001b[36mfunction\u001b[39m newTask() {\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m    \u001b[36mconst\u001b[39m [value\u001b[33m,\u001b[39m setValue] \u001b[33m=\u001b[39m useState(\u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m        \u001b[36mconst\u001b[39m handleOnChange \u001b[33m=\u001b[39m (e) \u001b[33m=>\u001b[39m {\u001b[0m","no-undef","'FILTER_ALL' is not defined.","Identifier","undef","no-unused-vars","'FILTER_ISDONE' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]